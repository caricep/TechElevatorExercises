{"remainingRequest":"/Users/cposton/Development/cariceposton-java-blue-materials/module-4/30_Introduction_to_Vue_and_Data_Binding/student-exercise/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/cposton/Development/cariceposton-java-blue-materials/module-4/30_Introduction_to_Vue_and_Data_Binding/student-exercise/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cposton/Development/cariceposton-java-blue-materials/module-4/30_Introduction_to_Vue_and_Data_Binding/student-exercise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cposton/Development/cariceposton-java-blue-materials/module-4/30_Introduction_to_Vue_and_Data_Binding/student-exercise/src/components/UserList.vue?vue&type=template&id=4a3fa6b9&scoped=true&","dependencies":[{"path":"/Users/cposton/Development/cariceposton-java-blue-materials/module-4/30_Introduction_to_Vue_and_Data_Binding/student-exercise/src/components/UserList.vue","mtime":1595452349654},{"path":"/Users/cposton/Development/cariceposton-java-blue-materials/module-4/30_Introduction_to_Vue_and_Data_Binding/student-exercise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cposton/Development/cariceposton-java-blue-materials/module-4/30_Introduction_to_Vue_and_Data_Binding/student-exercise/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/cposton/Development/cariceposton-java-blue-materials/module-4/30_Introduction_to_Vue_and_Data_Binding/student-exercise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cposton/Development/cariceposton-java-blue-materials/module-4/30_Introduction_to_Vue_and_Data_Binding/student-exercise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}